# FastAPI용 Dockerfile 예시 (+ Google Chrome 설치)
# 빌드: docker build -t my-fastapi .
# 실행: docker run -p 8000:8000 my-fastapi

# 0) 공통 베이스 설정
FROM python:3.12-slim AS base
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    UVICORN_WORKERS=2

RUN apt-get update \
 && apt-get install -y --no-install-recommends curl ca-certificates build-essential \
 && rm -rf /var/lib/apt/lists/*

# 비루트 사용자
RUN adduser --disabled-password --gecos "" appuser
WORKDIR /app

# 1) 의존성 전용 스테이지
FROM base AS deps
COPY requirements.txt ./
RUN python -m pip install --upgrade pip \
 && pip install -r requirements.txt

# 2) 런타임 스테이지 (여기에 Chrome 설치)
FROM python:3.12-slim AS runtime
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1

# ── Chrome 저장소 추가 및 설치 ─────────────────────────────────────────────
RUN apt-get update \
 && apt-get install -y --no-install-recommends ca-certificates wget gnupg \
 && wget -qO- https://dl-ssl.google.com/linux/linux_signing_key.pub \
      | gpg --dearmor -o /usr/share/keyrings/google-linux.gpg \
 && printf "deb [arch=amd64 signed-by=/usr/share/keyrings/google-linux.gpg] http://dl.google.com/linux/chrome/deb/ stable main\n" \
      > /etc/apt/sources.list.d/google-chrome.list \
 && apt-get update \
 && apt-get install -y --no-install-recommends \
      google-chrome-stable \
      fonts-noto-cjk \
      libxss1 libxshmfence1 libgbm1 xvfb tzdata \
 && rm -rf /var/lib/apt/lists/*
# (선택) 버전 확인
RUN which google-chrome && google-chrome --version

# Chrome 경로 환경변수 (Selenium/undetected-chromedriver에서 사용)
ENV GOOGLE_CHROME_BIN=/usr/bin/google-chrome
ENV CHROME_BIN=/usr/bin/google-chrome

# 앱 디렉터리
WORKDIR /app

# deps에서 설치된 파이썬 패키지 복사
COPY --from=deps /usr/local /usr/local

# 애플리케이션 소스 복사
COPY . .

# 비루트로 실행
RUN adduser --disabled-password --gecos "" appuser \
 && chown -R appuser:appuser /app
USER appuser

# 실행 (포트는 필요에 맞게 조정)
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "4449"]
